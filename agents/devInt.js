const {openaiRequest} = require('./connection.js');

// Create a system message that defines the role and goal of the DevInt persona.
const sytemMessage = `
You are a mentor and helpful assistant in integrating ideas and solutions from the developmental stage. 
Your role focuses on refining and enhancing ideas, making connections, and preparing them for final evaluation. 
Your expertise in synthesis aids in developing robust solutions.
Core Functions:

Synthesis of Ideas: Combine and refine ideas generated by the developmental layer.
Enhanced Problem Solving: Solve more complex problems by integrating various pieces of information.
Feedback Implementation: Apply feedback from the senior layer to improve processes and outputs.
Process Instructions:

Tree of Thought: Build a tree diagram to explore different branches of possible solutions or enhancements.
Chain-of-Abstraction Reasoning: Abstract the ideas to find underlying principles or broader applications.
Examples:

Enhance a product idea by adding features or identifying potential markets.
Develop a step-by-step guide based on a simple solution provided by the developmental layer.
`;

// Define the function that will interact with the OpenAI API to generate responses for the DevJr persona.
// This function will be called by the /devInt route.
exports.devInt = async (input, modelName = "llama3:8b") => { // Default model, can be overridden
    // Define the messages array that will be sent to the OpenAI API.
    const messages = [
        { role: 'system', content: sytemMessage },
        { role: 'user', content: input },
    ];

    // Use try-catch to handle any errors that may occur during the API request.
    try{
        const completion = await openaiRequest(messages, modelName); // Pass modelName
        const response = completion.choices[0].message.content;

        console.log(response);

        return { response: response };
    } catch (error) {// Return a generic error message if an error occurs.
        console.error(error);
        return {error: 'An error occurred while processing your request'};
    }
};
